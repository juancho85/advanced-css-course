/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Basic reset */
*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

/* set root font size to use it as reference for measurements in rems (can be user from IE 9)*/
html {
    font-size: 62.5%; /* 16px of default browser font size * 0.625 = 10px */
}

/* Project wide font definitions: Inherited from body */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /*font-size: 16px;*/
    line-height: 1.7; /* 1.7 times bigger than the predefined line height */
    color: #777;
    padding: 3rem; /* White border applied on the entire page */
    box-sizing: border-box; /*Border and paddings are not added to total height/width of elements*/
}

.header {
    position: relative; /* Important so that child elements can position absolutely */
    height: 95vh; /* 95% of the viewport */
    background-image: linear-gradient(
            to right bottom, rgba(126, 213, 111, 0.81),
            rgba(40, 180, 133, 0.8)
    ), url("../img/hero.jpg"); /* Gradient on top, so we put it first */
    background-size: cover; /* Try to fit the element inside of the box */
    background-position: top; /* Ensure that whatever the viewport size the top stays put */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* Visible part ot the element - polygon(x y, x y, x y, ...) */
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.logo {
    height: 3.5rem;
    /*width will be inferred by the browser*/
}

.header__text-box {
    position: absolute;
    top: 40%; /* In relation to the parent */
    left: 50%;
    transform: translate(-50%, -50%); /* Transition relative to the height, width of the element itself*/
    text-align: center; /* Used to align the button, an inline block */
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden; /* Hack for shaking at the end of animation */
    margin-bottom: 6rem; /* Add spacing with button */
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400; /* Defines the boldness of the font */
    letter-spacing: 3.5rem;
    animation-name: moveInLeft; /* Makes reference to a keyframe */
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /*animation-delay: 3s;*/
    /*animation-iteration-count: 3;*/
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
}

/* Animations: transitions or keyframes
Browser are optimized for opacity and for transform properties*/

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none; /* Take out the default underlining */
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .1s;
    position: relative; /* Needed for the absolute positioning of .btn::after */
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2); /* x-axis y-axis blur color */
}

.btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2); /* decrease size and blur to make it appear closer */
}

.btn--white {
    background-color: white;
    color: #777
}

/* We place en elements just like the main button but behind it.
 the pseudo element is threated like a child the main element, that is why we can define the width
 and height in percentages*/
.btn::after {
    content: ""; /* Mandatory to have the element displayes, just like the display property */
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn--white::after {
    background-color: white;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom .5s ease-out .75s; /* name, duration, timing function, delay */
    animation-fill-mode: backwards; /* apply the styles of 0% before the animation starts */
}